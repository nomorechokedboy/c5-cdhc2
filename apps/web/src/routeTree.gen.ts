/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TableRouteImport } from './routes/table'
import { Route as StudentsRouteImport } from './routes/students'
import { Route as HcyuRouteImport } from './routes/hcyu'
import { Route as CpvRouteImport } from './routes/cpv'
import { Route as BirthdayWeekRouteImport } from './routes/birthday-week'
import { Route as BirthdayRouteImport } from './routes/birthday'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ClassesIndexRouteImport } from './routes/classes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as ClassesClassIdRouteImport } from './routes/classes/$classId'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'

const TableRoute = TableRouteImport.update({
  id: '/table',
  path: '/table',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentsRoute = StudentsRouteImport.update({
  id: '/students',
  path: '/students',
  getParentRoute: () => rootRouteImport,
} as any)
const HcyuRoute = HcyuRouteImport.update({
  id: '/hcyu',
  path: '/hcyu',
  getParentRoute: () => rootRouteImport,
} as any)
const CpvRoute = CpvRouteImport.update({
  id: '/cpv',
  path: '/cpv',
  getParentRoute: () => rootRouteImport,
} as any)
const BirthdayWeekRoute = BirthdayWeekRouteImport.update({
  id: '/birthday-week',
  path: '/birthday-week',
  getParentRoute: () => rootRouteImport,
} as any)
const BirthdayRoute = BirthdayRouteImport.update({
  id: '/birthday',
  path: '/birthday',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ClassesIndexRoute = ClassesIndexRouteImport.update({
  id: '/classes/',
  path: '/classes/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const ClassesClassIdRoute = ClassesClassIdRouteImport.update({
  id: '/classes/$classId',
  path: '/classes/$classId',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/birthday': typeof BirthdayRoute
  '/birthday-week': typeof BirthdayWeekRoute
  '/cpv': typeof CpvRoute
  '/hcyu': typeof HcyuRoute
  '/students': typeof StudentsRoute
  '/table': typeof TableRoute
  '/classes/$classId': typeof ClassesClassIdRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/classes': typeof ClassesIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/birthday': typeof BirthdayRoute
  '/birthday-week': typeof BirthdayWeekRoute
  '/cpv': typeof CpvRoute
  '/hcyu': typeof HcyuRoute
  '/students': typeof StudentsRoute
  '/table': typeof TableRoute
  '/classes/$classId': typeof ClassesClassIdRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/classes': typeof ClassesIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/birthday': typeof BirthdayRoute
  '/birthday-week': typeof BirthdayWeekRoute
  '/cpv': typeof CpvRoute
  '/hcyu': typeof HcyuRoute
  '/students': typeof StudentsRoute
  '/table': typeof TableRoute
  '/classes/$classId': typeof ClassesClassIdRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/classes/': typeof ClassesIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/birthday'
    | '/birthday-week'
    | '/cpv'
    | '/hcyu'
    | '/students'
    | '/table'
    | '/classes/$classId'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/classes'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/birthday'
    | '/birthday-week'
    | '/cpv'
    | '/hcyu'
    | '/students'
    | '/table'
    | '/classes/$classId'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/classes'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/'
    | '/birthday'
    | '/birthday-week'
    | '/cpv'
    | '/hcyu'
    | '/students'
    | '/table'
    | '/classes/$classId'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/classes/'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BirthdayRoute: typeof BirthdayRoute
  BirthdayWeekRoute: typeof BirthdayWeekRoute
  CpvRoute: typeof CpvRoute
  HcyuRoute: typeof HcyuRoute
  StudentsRoute: typeof StudentsRoute
  TableRoute: typeof TableRoute
  ClassesClassIdRoute: typeof ClassesClassIdRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ClassesIndexRoute: typeof ClassesIndexRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/table': {
      id: '/table'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof TableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/students': {
      id: '/students'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof StudentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hcyu': {
      id: '/hcyu'
      path: '/hcyu'
      fullPath: '/hcyu'
      preLoaderRoute: typeof HcyuRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cpv': {
      id: '/cpv'
      path: '/cpv'
      fullPath: '/cpv'
      preLoaderRoute: typeof CpvRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/birthday-week': {
      id: '/birthday-week'
      path: '/birthday-week'
      fullPath: '/birthday-week'
      preLoaderRoute: typeof BirthdayWeekRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/birthday': {
      id: '/birthday'
      path: '/birthday'
      fullPath: '/birthday'
      preLoaderRoute: typeof BirthdayRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/classes/': {
      id: '/classes/'
      path: '/classes'
      fullPath: '/classes'
      preLoaderRoute: typeof ClassesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/classes/$classId': {
      id: '/classes/$classId'
      path: '/classes/$classId'
      fullPath: '/classes/$classId'
      preLoaderRoute: typeof ClassesClassIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BirthdayRoute: BirthdayRoute,
  BirthdayWeekRoute: BirthdayWeekRoute,
  CpvRoute: CpvRoute,
  HcyuRoute: HcyuRoute,
  StudentsRoute: StudentsRoute,
  TableRoute: TableRoute,
  ClassesClassIdRoute: ClassesClassIdRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ClassesIndexRoute: ClassesIndexRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
